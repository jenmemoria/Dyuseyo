<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itbank.repository.MatchDAO">
	<select id="selectMatches" parameterType="string"
		resultType="match">
		SELECT matching.*,
		(SELECT username FROM member where matching.reqUser = member.userid) AS
		requsername,
		(SELECT username FROM member where matching.respUser = member.userid) AS
		respusername
		FROM matching
		WHERE reqUser = #{userid} OR respUser = #{userid}
	</select>

	<select id="getMyDetail" resultType="com.itbank.model.MemberDTO">
		select * from member_con where userid = #{userid}
	</select>

	<select id="selectMatchList"
		parameterType="com.itbank.model.MemberDTO"
		resultType="com.itbank.model.MemberDTO">
		SELECT mc.* FROM member_con mc
		join membership ms
		on mc.userid = ms.userid
		<where>
			<if test="gender == '남성'">
				gender = '여성'
			</if>
			<if test="gender == '여성'">
				gender = '남성'
			</if>
			<!-- 추가적인 조건절 -->
			AND grade = #{grade}
		</where>
		order by DBMS_random.value()
	</select>

	<select id="selectGetUserInfo"
		resultType="com.itbank.model.MemberDTO">
		select * from member_con where userid = #{userid}
	</select>

	<update id="disconnect" parameterType="match">
		update matching set matched = 3
		where ((reqUser = #{reqUser} and respUser = #{respUser})
		or (reqUser = #{respUser} and respUser = #{reqUser}))
		and matched = 1
	</update>

	<select id="getMatched" parameterType="msg">
		select matched from matching
		where (reqUser = #{reqUser} and respUser = #{respUser})
		or (reqUser = #{respUser} and respUser = #{reqUser})
	</select>

	<insert id="insertMatch"
		parameterType="com.itbank.model.MatchDTO">
		insert into matching(requser, respuser)
		values(#{reqUser}, #{respUser})
	</insert>

	<update id="refuseUpdate"
		parameterType="com.itbank.model.MatchDTO">
		update matching set matched = 2
		where ((reqUser = #{reqUser} and respUser = #{respUser})
		or (reqUser = #{respUser} and respUser = #{reqUser})) and matched = '0'
	</update>

	<select id="matchCount"
		parameterType="com.itbank.model.MatchDTO">
		select count(*) from matching
		where ((reqUser = #{reqUser} and respUser = #{respUser})
		or (reqUser = #{respUser} and respUser = #{reqUser})) and (matched = '0'
		or matched = '1')
	</select>


	<update id="consentUpdate"
		parameterType="com.itbank.model.MatchDTO">
		update matching set matched = 1
		where ((reqUser = #{reqUser} and respUser = #{respUser})
		or (reqUser = #{respUser} and respUser = #{reqUser})) and matched = '0'
	</update>

	<select id="getMatchingCount" parameterType="string">
		select count(*) from matching
		where (reqUser = #{userid} or respUser = #{userid}) and (matched = '1')
	</select>

	<update id="matchtTryUpdate"
		parameterType="com.itbank.model.MatchDTO">
		update membership set matchCount = matchCount - 1
		where userid = #{reqUser}
	</update>

	<update id="consentMatchCountUpdate"
		parameterType="com.itbank.model.MatchDTO">
		update membership set matchCount = matchCount - 1
		where userid = #{respUser}
	</update>
	
	<select id="getWaitingMatchCount" parameterType="String">
		select count(*) from matching
		where respUser = #{userid}
		and matched = 0
	</select>
</mapper>